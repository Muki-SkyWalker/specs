#summary Notable changes to specs releases
#labels Featured

||_to be released_|| *specs* 1.6.4 (for Scala-2.8.0) || fixed issue 117, issue 118, issue 119, issue 120, issue 121, issue 122, issue 123 ||
||_to be released_|| *specs* 1.6.2.1 (for Scala-2.7.7) || fixed issue 117, issue 118, issue 119, issue 120, issue 121, issue 122, issue 123 ||
||4/11/2010|| *specs* 1.6.3 for Scala-2.8.0.Beta1 || port of specs 1.6.2 to Scala-2.8.0.Beta1 ||
||4/11/2010|| *specs* 1.6.2 for Scala-2.7.7 || Added a !TestInterfaceRunner so that specifications can be executed from sbt, with the test-interface jar. Fixed issue 102. Fixed issue 103. added a `beSome(value)` matcher. Fixed issue 104, issue 105, issue 107, issue 110, issue 111, issue 112, issue 113, issue 114. Added an [http://code.google.com/p/specs/wiki/MatchersGuide?ts=1265117548&updated=MatchersGuide#(_from_1.6.2_)_Eventual_matches eventually] functionality on matchers so that a result can be checked to be eventually ok (Thanks to Robey Pointer). This is the last release for Scala 2.7.7 with new functionalities.||
||11/5/2009|| *specs* 1.6.1 || Added "around" actions that can be executed around the expectations of an example. fixed issue 89. Added a +/- operator for beCloseTo matching. fixed issue 93. Added [http://code.google.com/p/specs/wiki/DeclareSpecifications#Specification_context SpecContexts]. Upgraded to !ScalaCheck 1.6. Changed the Markdown implementation with the javascript implementation (showdown.js) - this means that java 6 is required for this feature. [http://code.google.com/p/specs/wiki/DeclareSpecifications#Shared_contexts Alias methods for the `->-` operator]. Added a helper method to create [http://code.google.com/p/specs/wiki/LiterateSpecifications#Helper_functions collapsible sections and links to any xml node] in literate specs. Removed all warnings. Added helper methods to create [http://code.google.com/p/specs/wiki/Forms#Forms_layout tabs] for Forms.  Added a [http://code.google.com/p/specs/wiki/RunningSpecs#Specification_plan plan option] to display the plan of a specification without executing the examples. Upgraded to scalatest 1.0 (removed the Conductor class now fully available under !ScalaTest 1.0). Added a `any[T]` matcher on the Mockito trait. U7pgraded to !ScalaTest 1.0. fixed issue 98.||
||9/8/2009|| *specs* 1.6.0 || Changed the execution model so that local variables are not shared by default. Added a SpecificationWithJUnit class to remove the junit dependency on the Specification class. fixed issue 77, issue 78, issue 79, issue 80, issue 82, issue 83, issue 85, issue 86. Added an [http://code.google.com/p/specs/wiki/UsingEasyMock EasyMock] trait. Added the [http://code.google.com/p/specs/wiki/ThreadsSpecification Conductor] class from Josh Cough to specify threads behaviour.||
||5/7/2009|| *specs* 1.5.0 || Automatically throwing a `SkippedException("PENDING: not yet implemented")` if an Example doesn't contain any expectations (if it has an empty body for instance). Added new command line options to the run class: -p package names and -k class names. Added [http://code.google.com/p/specs/wiki/MatchersGuide#Be/Have_matchers be/have + matcher syntax]. Added `LiterateSpecification` and `Forms` [http://code.google.com/p/specs/wiki/LiterateSpecifications documentation]. Added a `Configuration` trait to [http://code.google.com/p/specs/wiki/RunningSpecs#Override_specs_default_behavior control specs behavior], for example w.r.t. the `PENDING` behavior above. Fixed issue 67, issue 71, issue 73. Added the 2 missing [http://code.google.com/p/specs/wiki/MatchersGuide#ScalaCheck_parameters ScalaCheck parameters]: `workers` and `wrkSize`. ||
||4/6/2009|| *specs* 1.4.4 || Fixed issue57, issue58, issue 59, issue 60, issue 61. Added a -h or -help option for the `ConsoleRunner`. Added -sus and -ex options to execute only some systems under specification or some examples according to a regular expression. Added a -c or --color option to display the output in color in the console (thanks to Stepan again!). Added a -finalstats option to display only the last statistics for composed specifications (see [http://code.google.com/p/specs/wiki/RunningSpecs#Display_the_help all the options]). Changed the Maven groupId to [http://code.google.com/p/specs/wiki/UserGuide#Maven_dependency org.scala-tools.testing]. Documented the [http://code.google.com/p/specs/wiki/DeclareSpecifications#System_contexts System contexts] and added a way to use them with implicit vals. Added a [http://code.google.com/p/specs/wiki/UsingMockito Mockito trait] to use [http://mockito.googlecode.com/ Mockito] in the specifications. The JUnit trait can be directly mixed in with a Specification (see [http://code.google.com/p/specs/wiki/RunningSpecs#Run_your_specification_with_JUnit4 here]). Upgraded the Textile parser to Wikitext. Added a "boosted" Specification class, `spex.Specification` with the `JUnit`, `ScalaTest`, `Sugar`, `Mockito` and `SystemContexts` traits. ||
||2/12/2009|| *specs* 1.4.3 || Added a [http://code.google.com/p/specs/wiki/RunningSpecs#Run_your_specification_in_the_Console "-xOnly" or "--failedOnly" option] to only display failures and errors in the console. Fixed issue 50. Fixed issue 53. Fixed issue 55. Fixed the [http://groups.google.com/group/specs-users/browse_thread/thread/fe8918a686112b47?hl=en forAll usage] for specifications using !ScalaCheck. Added a [http://code.google.com/p/specs/wiki/MatchersGuide#Matchers_applicable_to_any_object `beOneOf` matcher] Added a [http://code.google.com/p/specs/wiki/MatchersGuide#Matchers_applicable_to_Iterables `containMatchOnlyOnce` matcher]. Fixed the timer issue when timing the execution of composed specifications. ||
||01/14/2009|| *specs* 1.4.2 ||Fixed issue 47. Upgraded to `Scala-2.7.3`. Added a new [http://code.google.com/p/specs/wiki/RunningSpecs#Run_your_specification_with_Team_City TeamCity runner] (thanks to Stepan Koltsov)||
||11/28/2008|| *specs* 1.4.1 || Fixed issue 45.||
||11/15/2008|| *specs* 1.4.0 || Compiled with `Scala-2.7.2`. Compatible with `ScalaCheck 1.5`. Fixed an issue with the equalIgnoreSpace xml matcher not matching properly Text and Atom nodes. Fixed an issue with the location of a Failure not being properly indicated. Added beforeSpec/afterSpec methods to execute actions before and after a specification. Added doFirst/doLast methods to execute actions before and after executing the examples of a system. Added [http://code.google.com/p/specs/wiki/MatchersGuide#Precise_failures precise failure messages]. Added wiki text for Literate specifications. Added `HtmlRunner` to get Html reports (working properly with Firefox only). Fixed issue 37. Refactored `isAssertion` so that each `ScalaCheck` property evaluation will add a new assertion. Fixed issue 38 and added a way to specify an ordered comparison on xml nodes when doing equalIgnoreSpace. Fixed issue 39 (test description in the console with `mvn test`). Added a new `containInOrder` matcher for iterables. Added a new `havePairs` matcher for Maps. Added [http://code.google.com/p/specs/wiki/MatchersGuide#One_liners one-liners] for `ScalaCheck` properties. Renamed `beAlsoNull` to `beAsNullAs` and `beAlsoNone` as `beAsNoneAs`. Used `Manifests` to simpl ify the [http://code.google.com/p/specs/wiki/MatchersGuide#If_you_want_to_verify_that_an_exception_is_thrown Throwable matchers] and the JMock declarations. Changed the terminology of `assertion` to `expectation` and `system under test` to `system under specification` all over the code.||
||7/21/2008|| *specs* 1.3.1 ||Fixed an issue with the equalIgnoreSpace xml matcher not matching text inside nodes. Added [http://code.google.com/p/specs/wiki/RunningSpecs#Include_or_exclude_examples tags] to include and exclude examples from specs at execution time (can be used from the command line with `--accept and --reject`). Integrated tags with groups when using `ScalaTest`. Enhanced the Literate Specifications (Renamed Literal to Literate). Fixed a display issue with `ScalaCheck`. Fixed issue 41.||
||6/20/2008|| *specs* 1.3.0 ||Added [http://code.google.com/p/specs/wiki/DeclareSpecifications#Repeated_examples repeat] capability to [http://code.google.com/p/specs/wiki/DeclareSpecifications#Contexts contexts]. Fixed the JUnit runner so that errors and failures can be distinguished. Prototyped a lightweight [http://incubator.apache.org/buildr/ buildr] [http://specs.googlecode.com/files/specs-buildr-1.2.9.rar integration]. [http://code.google.com/p/specs/wiki/DeclareSpecifications#Anonymous_examples Anonymous examples] get better naming when a spec only contains assertions. Added [http://code.google.com/p/specs/wiki/UsingJMock#One_liners One liner methods] for JMock expectations and mock usage. [http://code.google.com/p/specs/w/edit/MatchersGuide#Detailed_differences detailedDiffs] shows the differences between 2 Strings using the [http://en.wikipedia.org/wiki/Levenshtein_distance Levenshtein distance]. Fixed issue 29. New class matchers `haveClass`, `haveSuperClass`, `beAssignableFrom`. Added [http://code.google.com/p/specs/wiki/UsingJMock#Capturing_parameters_for_returned_values capturingParameters] to be able to capture the value of one of the passed parameters on a mocked method and return it as a stub value. Added `a[T]` as [http://code.google.com/p/specs/wiki/UsingJMock#Method_parameters JMock parameter] to allow only some parameters to be matched on a mocked method. Fixed the timer reporting in the console.||
||5/27/2008|| *specs* 1.2.9 ||Reworked the [http://specs.googlecode.com/svn/trunk/src/test/scala/org/specs/samples/stackSpec.scala stackSpec] example. Added syntactic sugar for doBefore: `createObjects.before` and allowed its use when no sut is declared like in the helloWorld example. Fixed the `-ns` option. Added [http://code.google.com/p/specs/wiki/DeclareSpecifications#Contexts contexts]. Expectations can be flagged as assertions in the JMock specs with [http://code.google.com/p/specs/wiki/UsingJMock#Counting_assertions isAssertion]||
||5/24/2008|| *specs* 1.2.8 ||Genericized the `DataTables` so that 2 rows with conforming types can be chained (`1 ! 2 | 1 ! true` has type `Int, Any`). Specifications can be created with a name: `object helloWorld extends Specification("Hello World")`. Added a `haveSize` matcher for collections. Fixed `org.specs.allRunner` which should be an object. Added an `equalIgnoreSpace` matcher for Strings. Fixed the JUnit runner when using a skip inside a system under test. Added some `FileMatchers`. Added a `-ns` or `--nostacktrace` option to the `ConsoleRunner` to remove stacktraces from the console output. Defined a reusable `SpecsMatchers` trait to be able to reuse specs matchers outside of a specification. Added a `fail` method with no arguments. Added a isAssertion method to count one more assertion on mock expectations||
||5/8/2008|| *specs* 1.2.7 ||Set the System.exit code when using the `ConsoleRunner` (issue 17). Separated Scalacheck as a distinct trait (breaks existing code using Scalacheck). Removed 2.7.1 deprecation warnings. Added a main method in the Specification class to be able to execute it more easily (issue 15). Specifications can be included with the `include` method (alias of `isSpecifiedBy`, issue 18). Added a xUnit trait with xUnit-like assertions ||
||5/6/2008|| *specs* 1.2.6 || Recompiled to work with Scala 2.7.1. Added a new String matcher: `"lallbl" must find("l(.*?)l").withGroups("a", "b")`. Added 2 new matchers to check if values are null or None at the same time: `beAlsoNull` and `beAlsoNone`. Added some support to compose matchers in order to match object graphs (see the wiki).||
||3/7/2008|| *specs* 1.2.5 || Compatibility with the _real_ final Scala 2.7.0. Added an exception when a doBefore/After clause is not specified a "should". Corrected a bug with doAfter. Corrected a match error with the scalacheck matcher||
||2/28/2008|| *specs* 1.2.4 || Compatibility with Scala 2.7.0. Some scaladoc on support classes ||
||2/11/2008|| *specs* 1.2.3 || Provided a [http://www.artima.com/scalatest ScalaTest] runner. The examples are now executed only when the specification status (errors / failures) is requested. Refactored the runners so that a single class declaration can support several of them (`class myRunner extends Runner(mySpec) with JUnit with Console`). Fixed issue 9 with JUnit4. Deprecated the JUnit3 runner for JUnit4 as this is the only supported runner for JUnit. Removed the SpecsJUnitRunner java class which is not useful as JUnit4 specs can be launched directly from Eclipse. Provided a convenience JMocker object to allow the use of JMock in Scala projects without using Specifications. Fixed issue 10 and simplified the implicit defs for Assert objects (Assert object "must",...) ||
||1/28/2008|| *specs* 1.2.2 || deprecated the `usingBefore/After` methods using a parameterless function for some simpler methods `doBefore/After` just taking a block of code. Added a `WaitFor` trait to wait during an example. Fixed issue 7||
||1/25/2008|| *specs* 1.2.1 || lifted the typing restriction on the `be_==` matcher (introduced in 1.1.5) and added a new beEqual matcher which constrains both values to have compatible types. This still leaves one typing issue for the beEqual matcher on Iterables. See [http://code.google.com/p/specs/wiki/MatchersGuide#Matchers_applicable_to_any_object here]||
||1/23/2008|| *specs* 1.2 || jMock can now be used to create mocks and define expectations - see the [http://code.google.com/p/specs/wiki/UsingJMock wiki]. 2 matchers have been added for !PartialFunctions: beDefinedAt and beDefinedWith||
||1/11/2008|| *specs* 1.1.5 || you can now skip examples or a whole system under test - see the [http://code.google.com/p/specs/wiki/RunningSpecs#Skip_examples wiki]||
||1/5/2008||*specs* 1.1.4. ||corrected a bug involving multiple evaluation of an expression to be tested. In a mustBe b, a was evaluated 3 times. ||
||1/3/2008||*specs* 1.1.3. ||the specs declared as a JUnit3 !TestSuite can now be executed with JUnit4. The consequence is that specs now depends on JUnit-4.4||
||12/31/2007||*specs* 1.1.2. ||passes the test suite using Maven and is uploaded in scala-tools.org || 
||12/24/2007||*specs* 1.1.1. ||now fully compatible with scalacheck 1.1.1. || 
||12/21/2007||*specs* 1.1. ||xml matchers, xml runner, data tables, literate specifications and package renaming from scala.specs to org.specs|| 